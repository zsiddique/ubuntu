#!/usr/bin/make -f
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
# This file was originally written by Joey Hess and Craig Small.
# As a special exception, when this file is copied by dh-make into a
# dh-make output file, you may use that output file without restriction.
# This special exception was added by Craig Small in version 0.37 of dh-make.

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

# This has to be exported to make some magic below work.
export DH_OPTIONS

DEB_HOST_GNU_TYPE	?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE	?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)
DEB_BUILD_ARCH		?= $(shell dpkg-architecture -qDEB_BUILD_ARCH)

PHP5_HOST_GNU_TYPE	= $(subst gnulp,gnu,$(DEB_HOST_GNU_TYPE))
PHP5_BUILD_GNU_TYPE	= $(subst gnulp,gnu,$(DEB_BUILD_GNU_TYPE))

PHP5_HOST_GNU_TYPE	:= $(shell echo $(PHP5_HOST_GNU_TYPE) | sed 's/-gnu$$//')
PHP5_BUILD_GNU_TYPE	:= $(shell echo $(PHP5_BUILD_GNU_TYPE) | sed 's/-gnu$$//')

# enable the hardening wrapper
DEB_BUILD_HARDENING = 1
# but disable PIE
DEB_BUILD_HARDENING_PIE = 0
export DEB_BUILD_HARDENING DEB_BUILD_HARDENING_PIE

CFLAGS = -O2 -Wall -fsigned-char -fno-strict-aliasing
# LFS support
ifneq (yes,$(PHP5_COMPAT))
  CFLAGS += $(shell getconf LFS_CFLAGS)
endif

ifneq (nostrip, $(findstring nostrip, $(DEB_BUILD_OPTIONS)))
        install_strip = -s
endif

configure: configure-stamp

configure-stamp:
	dh_testdir
	if [ -d build ]; then rm -rf build; fi
	-mkdir build
	cd build && \
	CFLAGS="$(CFLAGS)" ../configure \
		--prefix=/usr --sysconfdir=/etc --localstatedir=/var/lib
	touch configure-stamp

build: build-stamp

build-stamp: configure-stamp
	dh_testdir
	cd build && $(MAKE)
	touch build-stamp

install: DH_OPTIONS=
install: build
	dh_testdir
	dh_testroot
	dh_clean -k
	dh_installdirs
	cd build && $(MAKE) install DESTDIR=$(CURDIR)/debian/varnish
	sed -i '/backend default {/,/}/ s/^#[[:space:]]//' debian/varnish/etc/varnish/default.vcl
	mkdir -p debian/varnish/etc/default
	install -o root -g root -m 644 debian/varnish.default debian/varnish/etc/default/varnish
	install -o root -g root -m 644 debian/varnish.varnishlog.default debian/varnish/etc/default/varnishlog
	install -o root -g root -m 644 debian/varnish.varnishncsa.default debian/varnish/etc/default/varnishncsaa
	mkdir -p debian/varnish/usr/share/varnish
	install -o root -g root -m 755 debian/reload-vcl debian/varnish/usr/share/varnish/reload-vcl
	mkdir -p debian/varnish/var/log/varnish
	touch install-stamp

binary: binary-arch

binary-arch: build install
	dh_testdir
	dh_testroot
	dh_installchangelogs ChangeLog
	dh_installdocs
	dh_installinit -a
	dh_installinit --name=varnishlog
	dh_installinit --name=varnishncsa
	dh_strip -s
	dh_link -s
	dh_compress -s
	dh_fixperms -s
	dh_installdeb -s
	dh_shlibdeps -s
	dh_gencontrol -s
	dh_md5sums -s
	dh_builddeb -s

clean:
	dh_testdir
	rm -f configure-stamp build-stamp install-stamp
	rm -rf build
	dh_clean

.PHONY: build clean binary-indep binary-arch binary install configure
