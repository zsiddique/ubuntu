diff -ur php52-5.2.14/configure php52-5.2.14-fpm/configure
--- php52-5.2.14/configure	2010-11-17 14:54:22.995574550 +0100
+++ php52-5.2.14-fpm/configure	2010-11-17 14:54:54.515566744 +0100
@@ -773,6 +773,17 @@
   --disable-path-info-check CGI: If this is disabled, paths such as
                             /info.php/test?a=b will fail to work"
 ac_help="$ac_help
+  --enable-fpm              FastCGI: If this is enabled, the fastcgi support
+                            will include experimental process manager code"
+ac_help="$ac_help
+  --with-fpm-conf=PATH        Set the path for php-fpm configuration file [PREFIX/etc/php-fpm.conf]"
+ac_help="$ac_help
+  --with-fpm-log=PATH         Set the path for php-fpm log file [PREFIX/logs/php-fpm.log]"
+ac_help="$ac_help
+  --with-fpm-pid=PATH         Set the path for php-fpm pid file [PREFIX/logs/php-fpm.pid]"
+ac_help="$ac_help
+  --with-xml-config=PATH      FPM: use xml-config in PATH to find libxml"
+ac_help="$ac_help
 
 General settings:
 "
@@ -12153,11 +12164,30 @@
 
 
 
+php_enable_fpm=no
+
+
+# Check whether --enable-fpm or --disable-fpm was given.
+if test "${enable_fpm+set}" = set; then
+  enableval="$enable_fpm"
+  PHP_FPM=$enableval
+else
+
+  PHP_FPM=no
+
+  if test "$PHP_ENABLE_ALL" && test "no" = "yes"; then
+    PHP_FPM=$PHP_ENABLE_ALL
+  fi
+
+fi
+
+
+ext_output=$PHP_FPM
 
 
 if test "$PHP_SAPI" = "default"; then
   echo $ac_n "checking whether to build CGI binary""... $ac_c" 1>&6
-echo "configure:12161: checking whether to build CGI binary" >&5
+echo "configure:12435: checking whether to build CGI binary" >&5
   if test "$PHP_CGI" != "no"; then
     echo "$ac_t""yes" 1>&6
     
@@ -12194,8 +12224,25 @@
 
     echo "$ac_t""$PHP_FASTCGI" 1>&6
 
+        if test "$PHP_FASTCGI" = "yes"; then
+      echo $ac_n "checking whether to enable FastCGI Process Manager""... $ac_c" 1>&6
+echo "configure:12474: checking whether to enable FastCGI Process Manager" >&5
+      if test "$PHP_FPM" = "yes"; then
+        PHP_FASTCGI_PM=1
+      else
+        PHP_FASTCGI_PM=0
+      fi
+      echo "$ac_t""$PHP_FPM" 1>&6
+    else
+      PHP_FASTCGI_PM=0
+    fi
+    cat >> confdefs.h <<EOF
+#define PHP_FASTCGI_PM $PHP_FASTCGI_PM
+EOF
+
+
         echo $ac_n "checking whether to force Apache CGI redirect""... $ac_c" 1>&6
-echo "configure:12199: checking whether to force Apache CGI redirect" >&5
+echo "configure:12490: checking whether to force Apache CGI redirect" >&5
     if test "$PHP_FORCE_CGI_REDIRECT" = "yes"; then
       CGI_REDIRECT=1
     else
@@ -12410,10 +12457,10 @@
         BUILD_CGI="echo '\#! .' > php.sym && echo >>php.sym && nm -BCpg \`echo \$(PHP_GLOBAL_OBJS) \$(PHP_SAPI_OBJS) | sed 's/\([A-Za-z0-9_]*\)\.lo/\1.o/g'\` | \$(AWK) '{ if (((\$\$2 == \"T\") || (\$\$2 == \"D\") || (\$\$2 == \"B\")) && (substr(\$\$3,1,1) != \".\")) { print \$\$3 } }' | sort -u >> php.sym && \$(LIBTOOL) --mode=link \$(CC) -export-dynamic \$(CFLAGS_CLEAN) \$(EXTRA_CFLAGS) \$(EXTRA_LDFLAGS_PROGRAM) \$(LDFLAGS) -Wl,-brtl -Wl,-bE:php.sym \$(PHP_RPATHS) \$(PHP_GLOBAL_OBJS) \$(PHP_SAPI_OBJS) \$(EXTRA_LIBS) \$(ZEND_EXTRA_LIBS) -o \$(SAPI_CGI_PATH)"
         ;;
       *darwin*)
-        BUILD_CGI="\$(CC) \$(CFLAGS_CLEAN) \$(EXTRA_CFLAGS) \$(EXTRA_LDFLAGS_PROGRAM) \$(LDFLAGS) \$(NATIVE_RPATHS) \$(PHP_GLOBAL_OBJS:.lo=.o) \$(PHP_SAPI_OBJS:.lo=.o) \$(PHP_FRAMEWORKS) \$(EXTRA_LIBS) \$(ZEND_EXTRA_LIBS) -o \$(SAPI_CGI_PATH)"
+        BUILD_CGI="\$(CC) \$(CFLAGS_CLEAN) \$(EXTRA_CFLAGS) \$(EXTRA_LDFLAGS_PROGRAM) \$(LDFLAGS) \$(NATIVE_RPATHS) \$(PHP_GLOBAL_OBJS:.lo=.o) \$(PHP_SAPI_OBJS:.lo=.o) \$(PHP_FRAMEWORKS) \$(EXTRA_LIBS) \$(SAPI_EXTRA_LIBS) \$(ZEND_EXTRA_LIBS) -o \$(SAPI_CGI_PATH)"
       ;;
       *)
-        BUILD_CGI="\$(LIBTOOL) --mode=link \$(CC) -export-dynamic \$(CFLAGS_CLEAN) \$(EXTRA_CFLAGS) \$(EXTRA_LDFLAGS_PROGRAM) \$(LDFLAGS) \$(PHP_RPATHS) \$(PHP_GLOBAL_OBJS) \$(PHP_SAPI_OBJS) \$(EXTRA_LIBS) \$(ZEND_EXTRA_LIBS) -o \$(SAPI_CGI_PATH)"
+        BUILD_CGI="\$(LIBTOOL) --mode=link \$(CC) -export-dynamic \$(CFLAGS_CLEAN) \$(EXTRA_CFLAGS) \$(EXTRA_LDFLAGS_PROGRAM) \$(LDFLAGS) \$(PHP_RPATHS) \$(PHP_GLOBAL_OBJS) \$(PHP_SAPI_OBJS) \$(EXTRA_LIBS) \$(SAPI_EXTRA_LIBS) \$(ZEND_EXTRA_LIBS) -o \$(SAPI_CGI_PATH)"
       ;;
     esac
 
@@ -12476,6 +12523,875 @@
 
 fi
 
+if test "$PHP_FASTCGI" = "yes" -a "$PHP_FPM" = "yes"; then
+  
+  echo "$ac_t""" 1>&6
+  echo "$ac_t""${T_MD}Running FastCGI Process Manager checks${T_ME}" 1>&6
+
+  
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+  
+FPM_VERSION="0.5.14"
+
+
+php_with_fpm_conf=\$prefix/etc/php-fpm.conf
+
+echo $ac_n "checking for php-fpm config file path""... $ac_c" 1>&6
+echo "configure:12798: checking for php-fpm config file path" >&5
+# Check whether --with-fpm-conf or --without-fpm-conf was given.
+if test "${with_fpm_conf+set}" = set; then
+  withval="$with_fpm_conf"
+  PHP_FPM_CONF=$withval
+else
+  
+  PHP_FPM_CONF=\$prefix/etc/php-fpm.conf
+
+  if test "$PHP_ENABLE_ALL" && test "no" = "yes"; then
+    PHP_FPM_CONF=$PHP_ENABLE_ALL
+  fi
+
+fi
+
+
+ext_output=$PHP_FPM_CONF
+echo "$ac_t""$ext_output" 1>&6
+
+
+
+
+
+php_with_fpm_log=\$prefix/logs/php-fpm.log
+
+echo $ac_n "checking for php-fpm log file path""... $ac_c" 1>&6
+echo "configure:12824: checking for php-fpm log file path" >&5
+# Check whether --with-fpm-log or --without-fpm-log was given.
+if test "${with_fpm_log+set}" = set; then
+  withval="$with_fpm_log"
+  PHP_FPM_LOG=$withval
+else
+  
+  PHP_FPM_LOG=\$prefix/logs/php-fpm.log
+
+  if test "$PHP_ENABLE_ALL" && test "no" = "yes"; then
+    PHP_FPM_LOG=$PHP_ENABLE_ALL
+  fi
+
+fi
+
+
+ext_output=$PHP_FPM_LOG
+echo "$ac_t""$ext_output" 1>&6
+
+
+
+
+
+php_with_fpm_pid=\$prefix/logs/php-fpm.pid
+
+echo $ac_n "checking for php-fpm pid file path""... $ac_c" 1>&6
+echo "configure:12850: checking for php-fpm pid file path" >&5
+# Check whether --with-fpm-pid or --without-fpm-pid was given.
+if test "${with_fpm_pid+set}" = set; then
+  withval="$with_fpm_pid"
+  PHP_FPM_PID=$withval
+else
+  
+  PHP_FPM_PID=\$prefix/logs/php-fpm.pid
+
+  if test "$PHP_ENABLE_ALL" && test "no" = "yes"; then
+    PHP_FPM_PID=$PHP_ENABLE_ALL
+  fi
+
+fi
+
+
+ext_output=$PHP_FPM_PID
+echo "$ac_t""$ext_output" 1>&6
+
+
+
+
+FPM_SOURCES="fpm.c \
+	fpm_conf.c \
+	fpm_signals.c \
+	fpm_children.c \
+	fpm_worker_pool.c \
+	fpm_unix.c \
+	fpm_cleanup.c \
+	fpm_sockets.c \
+	fpm_stdio.c \
+	fpm_env.c \
+	fpm_events.c \
+	fpm_php.c \
+	fpm_php_trace.c \
+	fpm_process_ctl.c \
+	fpm_request.c \
+	fpm_clock.c \
+	fpm_shm.c \
+	fpm_shm_slots.c \
+	xml_config.c \
+	zlog.c"
+
+
+	echo "$ac_t""checking for XML configuration" 1>&6
+
+	# Check whether --with-xml-config or --without-xml-config was given.
+if test "${with_xml_config+set}" = set; then
+  withval="$with_xml_config"
+  XMLCONFIG="$withval"
+else
+  for ac_prog in xml2-config xml-config
+do
+# Extract the first word of "$ac_prog", so it can be a program name with args.
+set dummy $ac_prog; ac_word=$2
+echo $ac_n "checking for $ac_word""... $ac_c" 1>&6
+echo "configure:12906: checking for $ac_word" >&5
+if eval "test \"`echo '$''{'ac_cv_path_XMLCONFIG'+set}'`\" = set"; then
+  echo $ac_n "(cached) $ac_c" 1>&6
+else
+  case "$XMLCONFIG" in
+  /*)
+  ac_cv_path_XMLCONFIG="$XMLCONFIG" # Let the user override the test with a path.
+  ;;
+  ?:/*)			 
+  ac_cv_path_XMLCONFIG="$XMLCONFIG" # Let the user override the test with a dos path.
+  ;;
+  *)
+  IFS="${IFS= 	}"; ac_save_ifs="$IFS"; IFS=":"
+  ac_dummy="$PATH"
+  for ac_dir in $ac_dummy; do 
+    test -z "$ac_dir" && ac_dir=.
+    if test -f $ac_dir/$ac_word; then
+      ac_cv_path_XMLCONFIG="$ac_dir/$ac_word"
+      break
+    fi
+  done
+  IFS="$ac_save_ifs"
+  ;;
+esac
+fi
+XMLCONFIG="$ac_cv_path_XMLCONFIG"
+if test -n "$XMLCONFIG"; then
+  echo "$ac_t""$XMLCONFIG" 1>&6
+else
+  echo "$ac_t""no" 1>&6
+fi
+
+test -n "$XMLCONFIG" && break
+done
+test -n "$XMLCONFIG" || XMLCONFIG=""""
+
+	
+fi
+
+
+	if test "x$XMLCONFIG" = "x"; then
+		{ echo "configure: error: XML configuration could not be found" 1>&2; exit 1; }
+	else
+        echo $ac_n "checking for libxml library""... $ac_c" 1>&6
+echo "configure:12950: checking for libxml library" >&5
+
+		if test ! -x "$XMLCONFIG"; then
+			{ echo "configure: error: $XMLCONFIG cannot be executed" 1>&2; exit 1; }
+		fi
+
+		LIBXML_LIBS="`$XMLCONFIG --libs`"
+		LIBXML_CFLAGS="`$XMLCONFIG --cflags`"
+		LIBXML_VERSION="`$XMLCONFIG --version`"
+
+        echo "$ac_t""yes, $LIBXML_VERSION" 1>&6
+
+		
+	SAVED_CFLAGS="$CFLAGS"
+	CFLAGS="$CFLAGS $LIBXML_CFLAGS"
+	SAVED_LIBS="$LIBS"
+	LIBS="$LIBS $LIBXML_LIBS"
+
+	echo $ac_n "checking for xmlParseFile""... $ac_c" 1>&6
+echo "configure:12969: checking for xmlParseFile" >&5
+if eval "test \"`echo '$''{'ac_cv_func_xmlParseFile'+set}'`\" = set"; then
+  echo $ac_n "(cached) $ac_c" 1>&6
+else
+  cat > conftest.$ac_ext <<EOF
+#line 12974 "configure"
+#include "confdefs.h"
+/* System header to define __stub macros and hopefully few prototypes,
+    which can conflict with char xmlParseFile(); below.  */
+#include <assert.h>
+/* Override any gcc2 internal prototype to avoid an error.  */
+/* We use char because int might match the return type of a gcc2
+    builtin and then its argument prototype would still apply.  */
+char xmlParseFile();
+
+int main() {
+
+/* The GNU C library defines this for functions which it implements
+    to always fail with ENOSYS.  Some functions are actually named
+    something starting with __ and the normal name is an alias.  */
+#if defined (__stub_xmlParseFile) || defined (__stub___xmlParseFile)
+choke me
+#else
+xmlParseFile();
+#endif
+
+; return 0; }
+EOF
+if { (eval echo configure:12997: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+  rm -rf conftest*
+  eval "ac_cv_func_xmlParseFile=yes"
+else
+  echo "configure: failed program was:" >&5
+  cat conftest.$ac_ext >&5
+  rm -rf conftest*
+  eval "ac_cv_func_xmlParseFile=no"
+fi
+rm -f conftest*
+fi
+
+if eval "test \"`echo '$ac_cv_func_'xmlParseFile`\" = yes"; then
+  echo "$ac_t""yes" 1>&6
+  :
+else
+  echo "$ac_t""no" 1>&6
+{ echo "configure: error: Failed to link with libxml" 1>&2; exit 1; }
+fi
+
+
+	CFLAGS="$SAVED_CFLAGS"
+	LIBS="$SAVED_LIBS"
+
+
+		cat >> confdefs.h <<\EOF
+#define HAVE_LIBXML 1
+EOF
+
+	fi
+
+
+	echo $ac_n "checking for prctl""... $ac_c" 1>&6
+echo "configure:13030: checking for prctl" >&5
+
+	cat > conftest.$ac_ext <<EOF
+#line 13033 "configure"
+#include "confdefs.h"
+ #include <sys/prctl.h> 
+int main() {
+prctl(0, 0, 0, 0, 0);
+; return 0; }
+EOF
+if { (eval echo configure:13040: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
+  rm -rf conftest*
+  
+		cat >> confdefs.h <<\EOF
+#define HAVE_PRCTL 1
+EOF
+
+		echo "$ac_t""yes" 1>&6
+	
+else
+  echo "configure: failed program was:" >&5
+  cat conftest.$ac_ext >&5
+  rm -rf conftest*
+  
+		echo "$ac_t""no" 1>&6
+	
+fi
+rm -f conftest*
+
+
+	have_clock_gettime=no
+
+	echo $ac_n "checking for clock_gettime""... $ac_c" 1>&6
+echo "configure:13063: checking for clock_gettime" >&5
+
+	cat > conftest.$ac_ext <<EOF
+#line 13066 "configure"
+#include "confdefs.h"
+ #include <time.h> 
+int main() {
+struct timespec ts; clock_gettime(CLOCK_MONOTONIC, &ts);
+; return 0; }
+EOF
+if { (eval echo configure:13073: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+  rm -rf conftest*
+  
+		have_clock_gettime=yes
+		echo "$ac_t""yes" 1>&6
+	
+else
+  echo "configure: failed program was:" >&5
+  cat conftest.$ac_ext >&5
+  rm -rf conftest*
+  
+		echo "$ac_t""no" 1>&6
+	
+fi
+rm -f conftest*
+
+	if test "$have_clock_gettime" = "no"; then
+		echo $ac_n "checking for clock_gettime in -lrt""... $ac_c" 1>&6
+echo "configure:13091: checking for clock_gettime in -lrt" >&5
+
+		SAVED_LIBS="$LIBS"
+		LIBS="$LIBS -lrt"
+
+		cat > conftest.$ac_ext <<EOF
+#line 13097 "configure"
+#include "confdefs.h"
+ #include <time.h> 
+int main() {
+struct timespec ts; clock_gettime(CLOCK_MONOTONIC, &ts);
+; return 0; }
+EOF
+if { (eval echo configure:13104: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+  rm -rf conftest*
+  
+			have_clock_gettime=yes
+			echo "$ac_t""yes" 1>&6
+		
+else
+  echo "configure: failed program was:" >&5
+  cat conftest.$ac_ext >&5
+  rm -rf conftest*
+  
+			LIBS="$SAVED_LIBS"
+			echo "$ac_t""no" 1>&6
+		
+fi
+rm -f conftest*
+	fi
+
+	if test "$have_clock_gettime" = "yes"; then
+		cat >> confdefs.h <<\EOF
+#define HAVE_CLOCK_GETTIME 1
+EOF
+
+	fi
+
+	have_clock_get_time=no
+
+	if test "$have_clock_gettime" = "no"; then
+		echo $ac_n "checking for clock_get_time""... $ac_c" 1>&6
+echo "configure:13133: checking for clock_get_time" >&5
+
+		if test "$cross_compiling" = yes; then
+    { echo "configure: error: can not run test program while cross compiling" 1>&2; exit 1; }
+else
+  cat > conftest.$ac_ext <<EOF
+#line 13139 "configure"
+#include "confdefs.h"
+ #include <mach/mach.h>
+			#include <mach/clock.h>
+			#include <mach/mach_error.h>
+
+			int main()
+			{
+				kern_return_t ret; clock_serv_t aClock; mach_timespec_t aTime;
+				ret = host_get_clock_service(mach_host_self(), REALTIME_CLOCK, &aClock);
+
+				if (ret != KERN_SUCCESS) {
+					return 1;
+				}
+
+				ret = clock_get_time(aClock, &aTime);
+				if (ret != KERN_SUCCESS) {
+					return 2;
+				}
+
+				return 0;
+			}
+		
+EOF
+if { (eval echo configure:13163: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null
+then
+  
+			have_clock_get_time=yes
+			echo "$ac_t""yes" 1>&6
+		
+else
+  echo "configure: failed program was:" >&5
+  cat conftest.$ac_ext >&5
+  rm -fr conftest*
+  
+			echo "$ac_t""no" 1>&6
+		
+fi
+rm -fr conftest*
+fi
+
+	fi
+
+	if test "$have_clock_get_time" = "yes"; then
+		cat >> confdefs.h <<\EOF
+#define HAVE_CLOCK_GET_TIME 1
+EOF
+
+	fi
+
+
+	have_ptrace=no
+	have_broken_ptrace=no
+
+	echo $ac_n "checking for ptrace""... $ac_c" 1>&6
+echo "configure:13194: checking for ptrace" >&5
+
+	cat > conftest.$ac_ext <<EOF
+#line 13197 "configure"
+#include "confdefs.h"
+
+		#include <sys/types.h>
+		#include <sys/ptrace.h> 
+int main() {
+ptrace(0, 0, (void *) 0, 0);
+; return 0; }
+EOF
+if { (eval echo configure:13206: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
+  rm -rf conftest*
+  
+		have_ptrace=yes
+		echo "$ac_t""yes" 1>&6
+	
+else
+  echo "configure: failed program was:" >&5
+  cat conftest.$ac_ext >&5
+  rm -rf conftest*
+  
+		echo "$ac_t""no" 1>&6
+	
+fi
+rm -f conftest*
+
+	if test "$have_ptrace" = "yes"; then
+		echo $ac_n "checking whether ptrace works""... $ac_c" 1>&6
+echo "configure:13224: checking whether ptrace works" >&5
+
+		if test "$cross_compiling" = yes; then
+    { echo "configure: error: can not run test program while cross compiling" 1>&2; exit 1; }
+else
+  cat > conftest.$ac_ext <<EOF
+#line 13230 "configure"
+#include "confdefs.h"
+
+			#include <unistd.h>
+			#include <signal.h>
+			#include <sys/wait.h>
+			#include <sys/types.h>
+			#include <sys/ptrace.h>
+			#include <errno.h>
+
+			#if !defined(PTRACE_ATTACH) && defined(PT_ATTACH)
+			#define PTRACE_ATTACH PT_ATTACH
+			#endif
+
+			#if !defined(PTRACE_DETACH) && defined(PT_DETACH)
+			#define PTRACE_DETACH PT_DETACH
+			#endif
+
+			#if !defined(PTRACE_PEEKDATA) && defined(PT_READ_D)
+			#define PTRACE_PEEKDATA PT_READ_D
+			#endif
+
+			int main()
+			{
+				long v1 = (unsigned int) -1; /* copy will fail if sizeof(long) == 8 and we've got "int ptrace()" */
+				long v2;
+				pid_t child;
+				int status;
+
+				if ( (child = fork()) ) { /* parent */
+					int ret = 0;
+
+					if (0 > ptrace(PTRACE_ATTACH, child, 0, 0)) {
+						return 1;
+					}
+
+					waitpid(child, &status, 0);
+
+			#ifdef PT_IO
+					struct ptrace_io_desc ptio = {
+						.piod_op = PIOD_READ_D,
+						.piod_offs = &v1,
+						.piod_addr = &v2,
+						.piod_len = sizeof(v1)
+					};
+
+					if (0 > ptrace(PT_IO, child, (void *) &ptio, 0)) {
+						ret = 1;
+					}
+			#else
+					errno = 0;
+
+					v2 = ptrace(PTRACE_PEEKDATA, child, (void *) &v1, 0);
+
+					if (errno) {
+						ret = 1;
+					}
+			#endif
+					ptrace(PTRACE_DETACH, child, (void *) 1, 0);
+
+					kill(child, SIGKILL);
+
+					return ret ? ret : (v1 != v2);
+				}
+				else { /* child */
+					sleep(10);
+					return 0;
+				}
+			}
+		
+EOF
+if { (eval echo configure:13301: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null
+then
+  
+			echo "$ac_t""yes" 1>&6
+		
+else
+  echo "configure: failed program was:" >&5
+  cat conftest.$ac_ext >&5
+  rm -fr conftest*
+  
+			have_ptrace=no
+			have_broken_ptrace=yes
+			echo "$ac_t""no" 1>&6
+		
+fi
+rm -fr conftest*
+fi
+
+	fi
+
+	if test "$have_ptrace" = "yes"; then
+		cat >> confdefs.h <<\EOF
+#define HAVE_PTRACE 1
+EOF
+
+	fi
+
+	have_mach_vm_read=no
+
+	if test "$have_broken_ptrace" = "yes"; then
+		echo $ac_n "checking for mach_vm_read""... $ac_c" 1>&6
+echo "configure:13332: checking for mach_vm_read" >&5
+
+		cat > conftest.$ac_ext <<EOF
+#line 13335 "configure"
+#include "confdefs.h"
+ #include <mach/mach.h>
+			#include <mach/mach_vm.h>
+		
+int main() {
+
+			mach_vm_read((vm_map_t)0, (mach_vm_address_t)0, (mach_vm_size_t)0, (vm_offset_t *)0, (mach_msg_type_number_t*)0);
+		
+; return 0; }
+EOF
+if { (eval echo configure:13346: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
+  rm -rf conftest*
+  
+			have_mach_vm_read=yes
+			echo "$ac_t""yes" 1>&6
+		
+else
+  echo "configure: failed program was:" >&5
+  cat conftest.$ac_ext >&5
+  rm -rf conftest*
+  
+			echo "$ac_t""no" 1>&6
+		
+fi
+rm -f conftest*
+	fi
+
+	if test "$have_mach_vm_read" = "yes"; then
+		cat >> confdefs.h <<\EOF
+#define HAVE_MACH_VM_READ 1
+EOF
+
+	fi
+
+	proc_mem_file=""
+
+	if test -r /proc/$$/mem ; then
+		proc_mem_file="mem"
+	else
+		if test -r /proc/$$/as ; then
+			proc_mem_file="as"
+		fi
+	fi
+
+	if test -n "$proc_mem_file" ; then
+		echo $ac_n "checking for proc mem file""... $ac_c" 1>&6
+echo "configure:13382: checking for proc mem file" >&5
+
+		if test "$cross_compiling" = yes; then
+    { echo "configure: error: can not run test program while cross compiling" 1>&2; exit 1; }
+else
+  cat > conftest.$ac_ext <<EOF
+#line 13388 "configure"
+#include "confdefs.h"
+
+			#define _GNU_SOURCE
+			#define _FILE_OFFSET_BITS 64
+			#include <stdint.h>
+			#include <unistd.h>
+			#include <sys/types.h>
+			#include <sys/stat.h>
+			#include <fcntl.h>
+			#include <stdio.h>
+			int main()
+			{
+				long v1 = (unsigned int) -1, v2 = 0;
+				char buf[128];
+				int fd;
+				sprintf(buf, "/proc/%d/$proc_mem_file", getpid());
+				fd = open(buf, O_RDONLY);
+				if (0 > fd) {
+					return 1;
+				}
+				if (sizeof(long) != pread(fd, &v2, sizeof(long), (uintptr_t) &v1)) {
+					close(fd);
+					return 1;
+				}
+				close(fd);
+				return v1 != v2;
+			}
+		
+EOF
+if { (eval echo configure:13418: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null
+then
+  
+			echo "$ac_t""$proc_mem_file" 1>&6
+		
+else
+  echo "configure: failed program was:" >&5
+  cat conftest.$ac_ext >&5
+  rm -fr conftest*
+  
+			proc_mem_file=""
+			echo "$ac_t""no" 1>&6
+		
+fi
+rm -fr conftest*
+fi
+
+	fi
+
+	if test -n "$proc_mem_file"; then
+		cat >> confdefs.h <<EOF
+#define PROC_MEM_FILE "$proc_mem_file"
+EOF
+
+	fi
+
+	if test "$have_ptrace" = "yes"; then
+		FPM_SOURCES="$FPM_SOURCES fpm_trace.c fpm_trace_ptrace.c"
+	elif test -n "$proc_mem_file"; then
+		FPM_SOURCES="$FPM_SOURCES fpm_trace.c fpm_trace_pread.c"
+	elif test "$have_mach_vm_read" = "yes" ; then
+		FPM_SOURCES="$FPM_SOURCES fpm_trace.c fpm_trace_mach.c"
+	fi
+
+
+
+LIBEVENT_CFLAGS="-I$abs_srcdir/libevent"
+LIBEVENT_LIBS="$abs_builddir/libevent/libevent.a"
+
+SAPI_EXTRA_DEPS="$LIBEVENT_LIBS"
+
+FPM_CFLAGS="$LIBEVENT_CFLAGS $LIBXML_CFLAGS $JUDY_CFLAGS"
+
+FPM_CFLAGS="$FPM_CFLAGS -I$abs_srcdir/sapi/cgi" # for fastcgi.h
+
+if test "$ICC" = "yes" ; then
+	FPM_ADD_CFLAGS="-Wall -wd279,310,869,810,981"
+elif test "$GCC" = "yes" ; then
+	FPM_ADD_CFLAGS="-Wall -Wpointer-arith -Wno-unused-parameter -Wunused-variable -Wunused-value -fno-strict-aliasing"
+fi
+
+if test -n "$FPM_WERROR" ; then
+	FPM_ADD_CFLAGS="$FPM_ADD_CFLAGS -Werror"
+fi
+
+FPM_CFLAGS="$FPM_ADD_CFLAGS $FPM_CFLAGS"
+
+
+  src=$abs_srcdir/sapi/cgi/fpm/Makefile.frag
+  ac_srcdir=$ext_srcdir
+  ac_builddir=$ext_builddir
+  test -f "$src" && $SED -e "s#\$(srcdir)#$ac_srcdir#g" -e "s#\$(builddir)#$ac_builddir#g" $src  >> Makefile.fragments
+
+
+
+  
+  case sapi/cgi/fpm in
+  "") ac_srcdir="$abs_srcdir/"; unset ac_bdir; ac_inc="-I. -I$abs_srcdir" ;;
+  /*) ac_srcdir=`echo "sapi/cgi/fpm"|cut -c 2-`"/"; ac_bdir=$ac_srcdir; ac_inc="-I$ac_bdir -I$abs_srcdir/$ac_bdir" ;;
+  *) ac_srcdir="$abs_srcdir/sapi/cgi/fpm/"; ac_bdir="sapi/cgi/fpm/"; ac_inc="-I$ac_bdir -I$ac_srcdir" ;;
+  esac
+  
+  
+
+  b_c_pre=$php_c_pre
+  b_cxx_pre=$php_cxx_pre
+  b_c_meta=$php_c_meta
+  b_cxx_meta=$php_cxx_meta
+  b_c_post=$php_c_post
+  b_cxx_post=$php_cxx_post
+  b_lo=$php_lo
+
+
+  old_IFS=$IFS
+  for ac_src in $FPM_SOURCES; do
+  
+      IFS=.
+      set $ac_src
+      ac_obj=$1
+      IFS=$old_IFS
+      
+      PHP_SAPI_OBJS="$PHP_SAPI_OBJS $ac_bdir$ac_obj.lo"
+
+      case $ac_src in
+        *.c) ac_comp="$b_c_pre $FPM_CFLAGS $ac_inc $b_c_meta -c $ac_srcdir$ac_src -o $ac_bdir$ac_obj.$b_lo $b_c_post" ;;
+        *.s) ac_comp="$b_c_pre $FPM_CFLAGS $ac_inc $b_c_meta -c $ac_srcdir$ac_src -o $ac_bdir$ac_obj.$b_lo $b_c_post" ;;
+        *.S) ac_comp="$b_c_pre $FPM_CFLAGS $ac_inc $b_c_meta -c $ac_srcdir$ac_src -o $ac_bdir$ac_obj.$b_lo $b_c_post" ;;
+        *.cpp|*.cc|*.cxx) ac_comp="$b_cxx_pre $FPM_CFLAGS $ac_inc $b_cxx_meta -c $ac_srcdir$ac_src -o $ac_bdir$ac_obj.$b_lo $b_cxx_post" ;;
+      esac
+
+    cat >>Makefile.objects<<EOF
+$ac_bdir$ac_obj.lo: $ac_srcdir$ac_src
+	$ac_comp
+EOF
+  done
+
+
+
+
+  
+    BUILD_DIR="$BUILD_DIR sapi/cgi/fpm"
+  
+
+
+install_fpm="install-fpm"
+
+
+  echo "$ac_t""" 1>&6
+  echo "$ac_t""${T_MD}Configuring libevent${T_ME}" 1>&6
+
+
+test -d "$abs_builddir/libevent" || mkdir -p $abs_builddir/libevent
+
+
+chmod +x "$abs_srcdir/libevent/configure" \
+		"$abs_srcdir/libevent/depcomp" \
+		"$abs_srcdir/libevent/install-sh" \
+		"$abs_srcdir/libevent/missing"
+
+libevent_configure="cd $abs_builddir/libevent ; CFLAGS=\"$CFLAGS $GCC_CFLAGS\" $abs_srcdir/libevent/configure --disable-shared"
+
+(eval $libevent_configure)
+
+if test ! -f "$abs_builddir/libevent/Makefile" ; then
+	echo "Failed to configure libevent" >&2
+	exit 1
+fi
+
+
+LIBEVENT_LIBS="$LIBEVENT_LIBS `echo "@LIBS@" | $abs_builddir/libevent/config.status --file=-:-`"
+
+SAPI_EXTRA_LIBS="$LIBEVENT_LIBS $LIBXML_LIBS $JUDY_LIBS"
+
+
+if test "$prefix" = "NONE" ; then
+	fpm_prefix=/usr/local
+else
+	fpm_prefix="$prefix"
+fi
+
+if test "$PHP_FPM_CONF" = "\$prefix/etc/php-fpm.conf" ; then
+	php_fpm_conf_path="$fpm_prefix/etc/php-fpm.conf"
+else
+	php_fpm_conf_path="$PHP_FPM_CONF"
+fi
+
+if test "$PHP_FPM_LOG" = "\$prefix/logs/php-fpm.log" ; then
+	php_fpm_log_path="$fpm_prefix/logs/php-fpm.log"
+else
+	php_fpm_log_path="$PHP_FPM_LOG"
+fi
+
+if test "$PHP_FPM_PID" = "\$prefix/logs/php-fpm.pid" ; then
+	php_fpm_pid_path="$fpm_prefix/logs/php-fpm.pid"
+else
+	php_fpm_pid_path="$PHP_FPM_PID"
+fi
+
+
+if grep nobody /etc/group >/dev/null 2>&1; then
+	php_fpm_group=nobody
+else
+	if grep nogroup /etc/group >/dev/null 2>&1; then
+		php_fpm_group=nogroup
+	else
+		php_fpm_group=nobody
+	fi
+fi
+
+
+  
+  PHP_VAR_SUBST="$PHP_VAR_SUBST php_fpm_conf_path"
+
+  
+
+
+  
+  PHP_VAR_SUBST="$PHP_VAR_SUBST php_fpm_log_path"
+
+  
+
+
+  
+  PHP_VAR_SUBST="$PHP_VAR_SUBST php_fpm_pid_path"
+
+  
+
+
+  
+  PHP_VAR_SUBST="$PHP_VAR_SUBST php_fpm_group"
+
+  
+
+
+  
+  PHP_VAR_SUBST="$PHP_VAR_SUBST FPM_VERSION"
+
+  
+
+
+
+  PHP_OUTPUT_FILES="$PHP_OUTPUT_FILES sapi/cgi/fpm/fpm_autoconf.h"
+
+
+  PHP_OUTPUT_FILES="$PHP_OUTPUT_FILES sapi/cgi/fpm/php-fpm.conf:sapi/cgi/fpm/conf/php-fpm.conf.in"
+
+
+  PHP_OUTPUT_FILES="$PHP_OUTPUT_FILES sapi/cgi/fpm/php-fpm:sapi/cgi/fpm/init.d/php-fpm.in"
+
+
+fi
+
 
 
 
@@ -17779,6 +18695,7 @@
 for ac_func in alphasort \
 asctime_r \
 chroot \
+clearenv \
 ctime_r \
 cuserid \
 crypt \
@@ -109731,6 +110648,18 @@
 
 
   
+  PHP_VAR_SUBST="$PHP_VAR_SUBST SAPI_EXTRA_LIBS"
+
+  
+
+
+  
+  PHP_VAR_SUBST="$PHP_VAR_SUBST SAPI_EXTRA_DEPS"
+
+  
+
+
+  
   PHP_VAR_SUBST="$PHP_VAR_SUBST ZEND_EXTRA_LIBS"
 
   
@@ -118004,7 +118933,7 @@
     install_targets="$PHP_INSTALL_CLI_TARGET $install_targets"
     ;;
   *)
-    install_targets="install-sapi $PHP_INSTALL_CLI_TARGET $install_targets"
+    install_targets="install-sapi $install_fpm $PHP_INSTALL_CLI_TARGET $install_targets"
     ;;
 esac
 
@@ -118708,6 +119637,12 @@
 s%@RE2C@%$RE2C%g
 s%@SHLIB_SUFFIX_NAME@%$SHLIB_SUFFIX_NAME%g
 s%@SHLIB_DL_SUFFIX_NAME@%$SHLIB_DL_SUFFIX_NAME%g
+s%@XMLCONFIG@%$XMLCONFIG%g
+s%@php_fpm_conf_path@%$php_fpm_conf_path%g
+s%@php_fpm_log_path@%$php_fpm_log_path%g
+s%@php_fpm_pid_path@%$php_fpm_pid_path%g
+s%@php_fpm_group@%$php_fpm_group%g
+s%@FPM_VERSION@%$FPM_VERSION%g
 s%@PROG_SENDMAIL@%$PROG_SENDMAIL%g
 s%@LIBOBJS@%$LIBOBJS%g
 s%@ALLOCA@%$ALLOCA%g
@@ -118757,6 +119692,8 @@
 s%@EXTRA_LDFLAGS@%$EXTRA_LDFLAGS%g
 s%@EXTRA_LDFLAGS_PROGRAM@%$EXTRA_LDFLAGS_PROGRAM%g
 s%@EXTRA_LIBS@%$EXTRA_LIBS%g
+s%@SAPI_EXTRA_LIBS@%$SAPI_EXTRA_LIBS%g
+s%@SAPI_EXTRA_DEPS@%$SAPI_EXTRA_DEPS%g
 s%@ZEND_EXTRA_LIBS@%$ZEND_EXTRA_LIBS%g
 s%@INCLUDES@%$INCLUDES%g
 s%@EXTRA_INCLUDES@%$EXTRA_INCLUDES%g
diff -ur php52-5.2.14/configure.in php52-5.2.14-fpm/configure.in
--- php52-5.2.14/configure.in	2010-11-17 14:54:22.995574550 +0100
+++ php52-5.2.14-fpm/configure.in	2010-11-17 14:54:54.515566744 +0100
@@ -296,6 +296,12 @@
   PTHREADS_FLAGS
 fi
 
+if test "$PHP_FASTCGI" = "yes" -a "$PHP_FPM" = "yes"; then
+  PHP_CONFIGURE_PART(Running FastCGI Process Manager checks)
+  sinclude(sapi/cgi/fpm/acinclude.m4)
+  sinclude(sapi/cgi/fpm/config.m4)
+fi
+
 divert(3)
 
 dnl ## In diversion 3 we check for compile-time options to the PHP
@@ -512,6 +518,7 @@
 alphasort \
 asctime_r \
 chroot \
+clearenv \
 ctime_r \
 cuserid \
 crypt \
@@ -1254,6 +1261,8 @@
 PHP_SUBST_OLD(EXTRA_LDFLAGS)
 PHP_SUBST_OLD(EXTRA_LDFLAGS_PROGRAM)
 PHP_SUBST_OLD(EXTRA_LIBS)
+PHP_SUBST_OLD(SAPI_EXTRA_LIBS)
+PHP_SUBST_OLD(SAPI_EXTRA_DEPS)
 PHP_SUBST_OLD(ZEND_EXTRA_LIBS)
 PHP_SUBST_OLD(INCLUDES)
 PHP_SUBST_OLD(EXTRA_INCLUDES)
@@ -1365,7 +1374,7 @@
     install_targets="$PHP_INSTALL_CLI_TARGET $install_targets"
     ;;
   *)
-    install_targets="install-sapi $PHP_INSTALL_CLI_TARGET $install_targets"
+    install_targets="install-sapi $install_fpm $PHP_INSTALL_CLI_TARGET $install_targets"
     ;;
 esac
 
Only in php52-5.2.14-fpm/: libevent
diff -ur php52-5.2.14/main/php_config.h.in php52-5.2.14-fpm/main/php_config.h.in
--- php52-5.2.14/main/php_config.h.in	2010-11-17 14:54:22.995574550 +0100
+++ php52-5.2.14-fpm/main/php_config.h.in	2010-11-17 14:54:54.535566400 +0100
@@ -170,6 +170,9 @@
 /* Define if you have the chroot function.  */
 #undef HAVE_CHROOT
 
+/* Define if you have the clearenv function.  */
+#undef HAVE_CLEARENV
+
 /* Define if you have the crypt function.  */
 #undef HAVE_CRYPT
 
@@ -938,6 +941,9 @@
 /*   */
 #undef PHP_FASTCGI
 
+/* Is experimental fastcgi process manager code activated */
+#undef PHP_FASTCGI_PM
+
 /*   */
 #undef FORCE_CGI_REDIRECT
 
@@ -947,6 +953,27 @@
 /*   */
 #undef ENABLE_PATHINFO_CHECK
 
+/* do we have libxml? */
+#undef HAVE_LIBXML
+
+/* do we have prctl? */
+#undef HAVE_PRCTL
+
+/* do we have clock_gettime? */
+#undef HAVE_CLOCK_GETTIME
+
+/* do we have clock_get_time? */
+#undef HAVE_CLOCK_GET_TIME
+
+/* do we have ptrace? */
+#undef HAVE_PTRACE
+
+/* do we have mach_vm_read? */
+#undef HAVE_MACH_VM_READ
+
+/* /proc/pid/mem interface */
+#undef PROC_MEM_FILE
+
 /* Define if system uses EBCDIC */
 #undef CHARSET_EBCDIC
 
diff -ur php52-5.2.14/sapi/cgi/cgi_main.c php52-5.2.14-fpm/sapi/cgi/cgi_main.c
--- php52-5.2.14/sapi/cgi/cgi_main.c	2010-11-17 14:54:23.005562555 +0100
+++ php52-5.2.14-fpm/sapi/cgi/cgi_main.c	2010-11-17 14:54:54.535566400 +0100
@@ -55,6 +55,9 @@
 #if HAVE_SYS_WAIT_H
 #include <sys/wait.h>
 #endif
+#if HAVE_FCNTL_H
+#include <fcntl.h>
+#endif
 #include "zend.h"
 #include "zend_extensions.h"
 #include "php_ini.h"
@@ -83,6 +86,11 @@
 #if PHP_FASTCGI
 #include "fastcgi.h"
 
+#if PHP_FASTCGI_PM
+#include "fpm/fpm.h"
+#include "fpm/fpm_request.h"
+#endif
+
 #ifndef PHP_WIN32
 /* XXX this will need to change later when threaded fastcgi is
    implemented.  shane */
@@ -115,8 +123,12 @@
 static pid_t pgroup;
 #endif
 
+static int request_body_fd;
+
 #endif
 
+static char *sapi_cgibin_getenv(char *name, size_t name_len TSRMLS_DC);
+
 #define PHP_MODE_STANDARD	1
 #define PHP_MODE_HIGHLIGHT	2
 #define PHP_MODE_INDENT		3
@@ -146,6 +158,10 @@
 	{'w', 0, "strip"},
 	{'?', 0, "usage"},/* help alias (both '?' and 'usage') */
 	{'v', 0, "version"},
+#if PHP_FASTCGI_PM
+	{'x', 0, "fpm"},
+	{'y', 1, "fpm-config"},
+#endif
 	{'z', 1, "zend-extension"},
 #if PHP_FASTCGI
  	{'T', 1, "timing"},
@@ -170,6 +186,7 @@
 	zend_bool impersonate;
 # endif
 #endif
+	char *error_header;
 } php_cgi_globals_struct;
 
 #ifdef ZTS
@@ -474,7 +491,28 @@
 #if PHP_FASTCGI
 		if (fcgi_is_fastcgi()) {
 			fcgi_request *request = (fcgi_request*) SG(server_context);
-			tmp_read_bytes = fcgi_read(request, buffer + read_bytes, count_bytes - read_bytes);
+
+			if (request_body_fd == -1) {
+				char *request_body_filename = sapi_cgibin_getenv((char *) "REQUEST_BODY_FILE",
+						sizeof("REQUEST_BODY_FILE")-1 TSRMLS_CC);
+
+				if (request_body_filename && *request_body_filename) {
+					request_body_fd = open(request_body_filename, O_RDONLY);
+
+					if (0 > request_body_fd) {
+						php_error(E_WARNING, "REQUEST_BODY_FILE: open('%s') failed: %s (%d)",
+								request_body_filename, strerror(errno), errno);
+						return 0;
+					}
+				}
+			}
+
+			/* If REQUEST_BODY_FILE variable not available - read post body from fastcgi stream */
+			if (request_body_fd < 0) {
+				tmp_read_bytes = fcgi_read(request, buffer + read_bytes, count_bytes - read_bytes);
+			} else {
+				tmp_read_bytes = read(request_body_fd, buffer + read_bytes, count_bytes - read_bytes);
+			}
 		} else {
 			tmp_read_bytes = read(STDIN_FILENO, buffer + read_bytes, count_bytes - read_bytes);
 		}
@@ -786,7 +824,12 @@
 			   "  -s               Display colour syntax highlighted source.\n"
 			   "  -v               Version number\n"
 			   "  -w               Display source with stripped comments and whitespace.\n"
-			   "  -z <file>        Load Zend extension <file>.\n"
+#if PHP_FASTCGI_PM
+			   "  -x, --fpm        Run in FastCGI process manager mode.\n"
+			   "  -y, --fpm-config <file>\n"
+			   "                   Specify alternative path to FastCGI process manager config file.\n"
+#endif
+ 			   "  -z <file>        Load Zend extension <file>.\n"
 #if PHP_FASTCGI
 			   "  -T <count>       Measure execution time of script repeated <count> times.\n"
 #endif
@@ -1236,6 +1279,7 @@
 # ifdef PHP_WIN32
 	STD_PHP_INI_ENTRY("fastcgi.impersonate",     "0",  PHP_INI_SYSTEM, OnUpdateBool,   impersonate, php_cgi_globals_struct, php_cgi_globals)
 # endif
+	STD_PHP_INI_ENTRY("fastcgi.error_header",    NULL, PHP_INI_SYSTEM, OnUpdateString, error_header, php_cgi_globals_struct, php_cgi_globals)
 #endif
 PHP_INI_END()
 
@@ -1258,6 +1302,7 @@
 # ifdef PHP_WIN32
 	php_cgi_globals->impersonate = 0;
 # endif
+	php_cgi_globals->error_header = NULL;
 #endif
 }
 /* }}} */
@@ -1290,9 +1335,47 @@
 static PHP_MINFO_FUNCTION(cgi)
 {
 	DISPLAY_INI_ENTRIES();
+
+#if PHP_FASTCGI_PM
+
+#include "fpm/fpm_autoconf.h"
+
+	php_info_print_table_start();
+	php_info_print_table_row(2, "php-fpm", fpm ? "active" : "inactive");
+	php_info_print_table_row(2, "php-fpm version", PHP_FPM_VERSION);
+	php_info_print_table_end();
+#endif
+
 }
 /* }}} */
 
+#if PHP_FASTCGI
+PHP_FUNCTION(fastcgi_finish_request)
+{
+	fcgi_request *request = (fcgi_request*) SG(server_context);
+
+	if (fcgi_is_fastcgi() && request->fd >= 0) {
+
+		php_end_ob_buffers(1 TSRMLS_CC);
+		php_header(TSRMLS_C);
+
+		fcgi_flush(request, 1);
+		fcgi_close(request, 0, 0);
+		RETURN_TRUE;
+	}
+
+	RETURN_FALSE;
+
+}
+#endif
+
+function_entry cgi_fcgi_sapi_functions[] = {
+#if PHP_FASTCGI
+	PHP_FE(fastcgi_finish_request,				NULL)
+#endif
+	{NULL, NULL, NULL}
+};
+
 static zend_module_entry cgi_module_entry = {
 	STANDARD_MODULE_HEADER,
 #if PHP_FASTCGI
@@ -1300,7 +1383,7 @@
 #else
 	"cgi",
 #endif
-	NULL, 
+	cgi_fcgi_sapi_functions, 
 	PHP_MINIT(cgi), 
 	PHP_MSHUTDOWN(cgi), 
 	NULL, 
@@ -1340,6 +1423,7 @@
 	char *bindpath = NULL;
 	int fcgi_fd = 0;
 	fcgi_request request;
+	char *fpm_config = NULL;
 	int repeats = 1;
 	int benchmark = 0;
 #if HAVE_GETTIMEOFDAY
@@ -1460,6 +1544,14 @@
 			case 's': /* generate highlighted HTML from source */
 				behavior = PHP_MODE_HIGHLIGHT;
 				break;
+#if PHP_FASTCGI_PM
+			case 'y':
+				fpm_config = php_optarg;
+				break;
+			case 'x':
+				fpm = 1;
+				break;
+#endif
 
 		}
 
@@ -1524,6 +1616,19 @@
 #endif	/* FORCE_CGI_REDIRECT */
 
 #if PHP_FASTCGI
+#if PHP_FASTCGI_PM
+	if (fpm) {
+		if (0 > fpm_init(argc, argv, fpm_config)) {
+			return FAILURE;
+		}
+
+		fcgi_fd = fpm_run(&max_requests);
+
+		fcgi_set_is_fastcgi(fastcgi = 1);
+	}
+	else
+#endif
+
 	if (bindpath) {
 		fcgi_fd = fcgi_listen(bindpath, 128);
 		if (fcgi_fd < 0) {
@@ -1538,6 +1643,9 @@
 	
 	if (fastcgi) {
 		/* How many times to run PHP scripts before dying */
+#if PHP_FASTCGI_PM
+		if (!fpm)
+#endif
 		if (getenv("PHP_FCGI_MAX_REQUESTS")) {
 			max_requests = atoi(getenv("PHP_FCGI_MAX_REQUESTS"));
 			if (max_requests < 0) {
@@ -1555,6 +1663,9 @@
 
 #ifndef PHP_WIN32
 	/* Pre-fork, if required */
+#if PHP_FASTCGI_PM
+	if (!fpm)
+#endif
 	if (getenv("PHP_FCGI_CHILDREN")) {
 		char * children_str = getenv("PHP_FCGI_CHILDREN");
 		children = atoi(children_str);
@@ -1704,6 +1815,8 @@
 #endif
 
 #if PHP_FASTCGI
+		request_body_fd = -1;
+
 		SG(server_context) = (void *) &request;
 #else
 		SG(server_context) = (void *) 1; /* avoid server_context==NULL checks */
@@ -1711,6 +1824,10 @@
 		init_request_info(TSRMLS_C);
 		CG(interactive) = 0;
 
+#if PHP_FASTCGI_PM
+		if (fpm) fpm_request_info();
+#endif
+
 		if (!cgi
 #if PHP_FASTCGI
 			&& !fastcgi
@@ -2002,6 +2119,10 @@
 			}
 		}
 
+#if PHP_FASTCGI_PM
+		if (fpm) fpm_request_executing();
+#endif
+
 		switch (behavior) {
 			case PHP_MODE_STANDARD:
 				php_execute_script(&file_handle TSRMLS_CC);
@@ -2054,6 +2175,10 @@
 
 #if PHP_FASTCGI
 fastcgi_request_done:
+
+		if (request_body_fd != -1) close(request_body_fd);
+
+		request_body_fd = -2;
 #endif
 		{
 			char *path_translated;
@@ -2067,6 +2192,16 @@
 				SG(request_info).path_translated = path_translated;
 			}
 
+			if (EG(exit_status) == 255) {
+				if (CGIG(error_header) && *CGIG(error_header)) {
+					sapi_header_line ctr = {0};
+
+					ctr.line = CGIG(error_header);
+					ctr.line_len = strlen(CGIG(error_header));
+					sapi_header_op(SAPI_HEADER_REPLACE, &ctr TSRMLS_CC);
+				}
+			}
+			
 			php_request_shutdown((void *) 0);
 			if (exit_status == 0) {
 				exit_status = EG(exit_status);
@@ -2104,15 +2239,20 @@
 				if (bindpath) {
 					free(bindpath);
 				}
-				if (max_requests != 1) {
-					/* no need to return exit_status of the last request */
-					exit_status = 0;
-				}
 				break;
 			}
 			/* end of fastcgi loop */
 		}
 		fcgi_shutdown();
+
+		if (fcgi_in_shutdown() || 								/* graceful shutdown by a signal */
+				(max_requests && (requests == max_requests))	/* we were told to process max_requests and we are done */
+			) {
+			exit_status = 0;
+		}
+		else {
+			exit_status = 255;
+		}
 #endif
 
 		if (cgi_sapi_module.php_ini_path_override) {
diff -ur php52-5.2.14/sapi/cgi/config9.m4 php52-5.2.14-fpm/sapi/cgi/config9.m4
--- php52-5.2.14/sapi/cgi/config9.m4	2010-11-17 14:54:04.505559099 +0100
+++ php52-5.2.14-fpm/sapi/cgi/config9.m4	2010-11-17 14:54:54.535566400 +0100
@@ -22,6 +22,10 @@
 [  --disable-path-info-check CGI: If this is disabled, paths such as
                             /info.php/test?a=b will fail to work], yes, no)
 
+PHP_ARG_ENABLE(fpm,,
+[  --enable-fpm              FastCGI: If this is enabled, the fastcgi support
+                            will include experimental process manager code], no, no)
+
 dnl
 dnl CGI setup
 dnl
@@ -54,6 +58,20 @@
     AC_DEFINE_UNQUOTED(PHP_FASTCGI, $PHP_ENABLE_FASTCGI, [ ])
     AC_MSG_RESULT($PHP_FASTCGI)
 
+    dnl --enable-fpm
+    if test "$PHP_FASTCGI" = "yes"; then
+      AC_MSG_CHECKING(whether to enable FastCGI Process Manager)
+      if test "$PHP_FPM" = "yes"; then
+        PHP_FASTCGI_PM=1
+      else
+        PHP_FASTCGI_PM=0
+      fi
+      AC_MSG_RESULT($PHP_FPM)
+    else
+      PHP_FASTCGI_PM=0
+    fi
+    AC_DEFINE_UNQUOTED(PHP_FASTCGI_PM, $PHP_FASTCGI_PM, [Is experimental fastcgi process manager code activated])
+
     dnl --enable-force-cgi-redirect
     AC_MSG_CHECKING(whether to force Apache CGI redirect)
     if test "$PHP_FORCE_CGI_REDIRECT" = "yes"; then
@@ -93,10 +111,10 @@
         BUILD_CGI="echo '\#! .' > php.sym && echo >>php.sym && nm -BCpg \`echo \$(PHP_GLOBAL_OBJS) \$(PHP_SAPI_OBJS) | sed 's/\([A-Za-z0-9_]*\)\.lo/\1.o/g'\` | \$(AWK) '{ if (((\$\$2 == \"T\") || (\$\$2 == \"D\") || (\$\$2 == \"B\")) && (substr(\$\$3,1,1) != \".\")) { print \$\$3 } }' | sort -u >> php.sym && \$(LIBTOOL) --mode=link \$(CC) -export-dynamic \$(CFLAGS_CLEAN) \$(EXTRA_CFLAGS) \$(EXTRA_LDFLAGS_PROGRAM) \$(LDFLAGS) -Wl,-brtl -Wl,-bE:php.sym \$(PHP_RPATHS) \$(PHP_GLOBAL_OBJS) \$(PHP_SAPI_OBJS) \$(EXTRA_LIBS) \$(ZEND_EXTRA_LIBS) -o \$(SAPI_CGI_PATH)"
         ;;
       *darwin*)
-        BUILD_CGI="\$(CC) \$(CFLAGS_CLEAN) \$(EXTRA_CFLAGS) \$(EXTRA_LDFLAGS_PROGRAM) \$(LDFLAGS) \$(NATIVE_RPATHS) \$(PHP_GLOBAL_OBJS:.lo=.o) \$(PHP_SAPI_OBJS:.lo=.o) \$(PHP_FRAMEWORKS) \$(EXTRA_LIBS) \$(ZEND_EXTRA_LIBS) -o \$(SAPI_CGI_PATH)"
+        BUILD_CGI="\$(CC) \$(CFLAGS_CLEAN) \$(EXTRA_CFLAGS) \$(EXTRA_LDFLAGS_PROGRAM) \$(LDFLAGS) \$(NATIVE_RPATHS) \$(PHP_GLOBAL_OBJS:.lo=.o) \$(PHP_SAPI_OBJS:.lo=.o) \$(PHP_FRAMEWORKS) \$(EXTRA_LIBS) \$(SAPI_EXTRA_LIBS) \$(ZEND_EXTRA_LIBS) -o \$(SAPI_CGI_PATH)"
       ;;
       *)
-        BUILD_CGI="\$(LIBTOOL) --mode=link \$(CC) -export-dynamic \$(CFLAGS_CLEAN) \$(EXTRA_CFLAGS) \$(EXTRA_LDFLAGS_PROGRAM) \$(LDFLAGS) \$(PHP_RPATHS) \$(PHP_GLOBAL_OBJS) \$(PHP_SAPI_OBJS) \$(EXTRA_LIBS) \$(ZEND_EXTRA_LIBS) -o \$(SAPI_CGI_PATH)"
+        BUILD_CGI="\$(LIBTOOL) --mode=link \$(CC) -export-dynamic \$(CFLAGS_CLEAN) \$(EXTRA_CFLAGS) \$(EXTRA_LDFLAGS_PROGRAM) \$(LDFLAGS) \$(PHP_RPATHS) \$(PHP_GLOBAL_OBJS) \$(PHP_SAPI_OBJS) \$(EXTRA_LIBS) \$(SAPI_EXTRA_LIBS) \$(ZEND_EXTRA_LIBS) -o \$(SAPI_CGI_PATH)"
       ;;
     esac
 
diff -ur php52-5.2.14/sapi/cgi/fastcgi.c php52-5.2.14-fpm/sapi/cgi/fastcgi.c
--- php52-5.2.14/sapi/cgi/fastcgi.c	2010-11-17 14:54:04.505559099 +0100
+++ php52-5.2.14-fpm/sapi/cgi/fastcgi.c	2010-11-17 14:54:54.535566400 +0100
@@ -27,6 +27,11 @@
 #include <stdarg.h>
 #include <errno.h>
 
+#if PHP_FASTCGI_PM
+#include "fpm/fpm.h"
+#include "fpm/fpm_request.h"
+#endif
+
 #ifdef _WIN32
 
 #include <windows.h>
@@ -234,6 +239,8 @@
 		} else {
 			return is_fastcgi = 0;
 		}
+
+		fcgi_set_allowed_clients(getenv("FCGI_WEB_SERVER_ADDRS"));
 #endif
 	}
 	return is_fastcgi;
@@ -249,14 +256,26 @@
 	}
 }
 
+void fcgi_set_is_fastcgi(int new_value)
+{
+	is_fastcgi = new_value;
+}
+
+void fcgi_set_in_shutdown(int new_value)
+{
+	in_shutdown = new_value;
+}
+
 void fcgi_shutdown(void)
 {
 	if (is_initialized) {
 		zend_hash_destroy(&fcgi_mgmt_vars);
 	}
 	is_fastcgi = 0;
+
 	if (allowed_clients) {
 		free(allowed_clients);
+		allowed_clients = 0;
 	}
 }
 
@@ -330,6 +349,41 @@
 }
 #endif
 
+void fcgi_set_allowed_clients(char *ip)
+{
+    char *cur, *end;
+    int n;
+	    
+    if (ip) {
+    	ip = strdup(ip);
+    	cur = ip;
+    	n = 0;
+    	while (*cur) {
+    		if (*cur == ',') n++;
+    		cur++;
+    	}
+		if (allowed_clients) free(allowed_clients);
+    	allowed_clients = malloc(sizeof(in_addr_t) * (n+2));
+    	n = 0;
+    	cur = ip;
+    	while (cur) {
+	    	end = strchr(cur, ',');
+	    	if (end) {
+    			*end = 0;
+    			end++;
+    		}
+    		allowed_clients[n] = inet_addr(cur);
+    		if (allowed_clients[n] == INADDR_NONE) {
+				fprintf(stderr, "Wrong IP address '%s' in FCGI_WEB_SERVER_ADDRS\n", cur);
+    		}
+    		n++;
+    		cur = end;
+    	}
+    	allowed_clients[n] = INADDR_NONE;
+		free(ip);
+	}
+}
+
 static int is_port_number(const char *bindpath)
 {
 	while (*bindpath) {
@@ -458,38 +512,6 @@
 
 	if (!tcp) {
 		chmod(path, 0777);
-	} else {
-			char *ip = getenv("FCGI_WEB_SERVER_ADDRS");
-			char *cur, *end;
-			int n;
-			
-			if (ip) {
-				ip = strdup(ip);
-				cur = ip;
-				n = 0;
-				while (*cur) {
-					if (*cur == ',') n++;
-					cur++;
-				}
-				allowed_clients = malloc(sizeof(in_addr_t) * (n+2));
-				n = 0;
-				cur = ip;
-				while (cur) {
-					end = strchr(cur, ',');
-					if (end) {
-						*end = 0;
-						end++;
-					}
-					allowed_clients[n] = inet_addr(cur);
-					if (allowed_clients[n] == INADDR_NONE) {
-					fprintf(stderr, "Wrong IP address '%s' in FCGI_WEB_SERVER_ADDRS\n", cur);
-					}
-					n++;
-					cur = end;
-				}
-				allowed_clients[n] = INADDR_NONE;
-			free(ip);
-		}
 	}
 
 	if (!is_initialized) {
@@ -866,7 +888,7 @@
 	return n;
 }
 
-static inline void fcgi_close(fcgi_request *req, int force, int destroy)
+void fcgi_close(fcgi_request *req, int force, int destroy)
 {
 	if (destroy) {
 		zend_hash_destroy(&req->env);
@@ -906,6 +928,10 @@
 		close(req->fd);
 #endif
 		req->fd = -1;
+
+#if PHP_FASTCGI_PM
+		if (fpm) fpm_request_finished();
+#endif
 	}
 }
 
@@ -953,6 +979,10 @@
 					sa_t sa;
 					socklen_t len = sizeof(sa);
 
+#if PHP_FASTCGI_PM
+					if (fpm) fpm_request_accepting();
+#endif
+
 					FCGI_LOCK(req->listen_socket);
 					req->fd = accept(listen_socket, (struct sockaddr *)&sa, &len);
 					FCGI_UNLOCK(req->listen_socket);
@@ -988,6 +1018,11 @@
 				break;
 #else
 				if (req->fd >= 0) {
+
+#if PHP_FASTCGI_PM
+					if (fpm) fpm_request_reading_headers();
+#endif
+
 #if defined(HAVE_SYS_POLL_H) && defined(HAVE_POLL)
 					struct pollfd fds;
 					int ret;
diff -ur php52-5.2.14/sapi/cgi/fastcgi.h php52-5.2.14-fpm/sapi/cgi/fastcgi.h
--- php52-5.2.14/sapi/cgi/fastcgi.h	2010-11-17 14:54:04.505559099 +0100
+++ php52-5.2.14-fpm/sapi/cgi/fastcgi.h	2010-11-17 14:54:54.535566400 +0100
@@ -114,6 +114,9 @@
 int fcgi_init(void);
 void fcgi_shutdown(void);
 int fcgi_is_fastcgi(void);
+void fcgi_set_is_fastcgi(int);
+void fcgi_set_in_shutdown(int);
+void fcgi_set_allowed_clients(char *);
 int fcgi_in_shutdown(void);
 int fcgi_listen(const char *path, int backlog);
 void fcgi_init_request(fcgi_request *req, int listen_socket);
@@ -128,6 +131,8 @@
 int fcgi_write(fcgi_request *req, fcgi_request_type type, const char *str, int len);
 int fcgi_flush(fcgi_request *req, int close);
 
+void fcgi_close(fcgi_request *req, int force, int destroy);
+
 #ifdef PHP_WIN32
 void fcgi_impersonate(void);
 #endif
Only in php52-5.2.14-fpm/sapi/cgi: fpm
diff -ur php52-5.2.14/sapi/cgi/Makefile.frag php52-5.2.14-fpm/sapi/cgi/Makefile.frag
--- php52-5.2.14/sapi/cgi/Makefile.frag	2010-11-17 14:54:04.505559099 +0100
+++ php52-5.2.14-fpm/sapi/cgi/Makefile.frag	2010-11-17 14:54:54.535566400 +0100
@@ -1,2 +1,2 @@
-$(SAPI_CGI_PATH): $(PHP_GLOBAL_OBJS) $(PHP_SAPI_OBJS)
+$(SAPI_CGI_PATH): $(PHP_GLOBAL_OBJS) $(PHP_SAPI_OBJS) $(SAPI_EXTRA_DEPS)
 	$(BUILD_CGI)
