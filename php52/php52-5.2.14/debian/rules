#!/usr/bin/make -f
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
# This file was originally written by Joey Hess and Craig Small.
# As a special exception, when this file is copied by dh-make into a
# dh-make output file, you may use that output file without restriction.
# This special exception was added by Craig Small in version 0.37 of dh-make.

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

# This has to be exported to make some magic below work.
export DH_OPTIONS

DEB_HOST_GNU_TYPE	?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE	?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)
DEB_BUILD_ARCH		?= $(shell dpkg-architecture -qDEB_BUILD_ARCH)

PHP5_HOST_GNU_TYPE	= $(subst gnulp,gnu,$(DEB_HOST_GNU_TYPE))
PHP5_BUILD_GNU_TYPE	= $(subst gnulp,gnu,$(DEB_BUILD_GNU_TYPE))

PHP5_HOST_GNU_TYPE	:= $(shell echo $(PHP5_HOST_GNU_TYPE) | sed 's/-gnu$$//')
PHP5_BUILD_GNU_TYPE	:= $(shell echo $(PHP5_BUILD_GNU_TYPE) | sed 's/-gnu$$//')

# enable the hardening wrapper
DEB_BUILD_HARDENING = 1
# but disable PIE
DEB_BUILD_HARDENING_PIE = 0
export DEB_BUILD_HARDENING DEB_BUILD_HARDENING_PIE

# Set PHP extension dir
EXTENSION_DIR=/usr/lib/php5/20060613
export EXTENSION_DIR

PROG_SENDMAIL	= /usr/sbin/sendmail
TIMEZONE	= $(shell cat /etc/timezone)

CFLAGS = -O2 -Wall -fsigned-char -fno-strict-aliasing
# LFS support
ifneq (yes,$(PHP5_COMPAT))
  CFLAGS += $(shell getconf LFS_CFLAGS)
endif

ifneq (nostrip, $(findstring nostrip, $(DEB_BUILD_OPTIONS)))
        install_strip = -s
endif

# Old magic.mime location:
ifeq ($(wildcard /usr/share/misc/file/magic.mime), /usr/share/misc/file/magic.mime)
MAGIC_MIME = /usr/share/misc/file/magic.mime
endif
# New magic.mime location:
ifeq ($(wildcard /usr/share/file/magic.mime), /usr/share/file/magic.mime)
MAGIC_MIME = /usr/share/file/magic.mime
endif

COMMON_CONFIG=--build=$(DEB_BUILD_GNU_TYPE) \
		--host=$(DEB_HOST_GNU_TYPE) \
		--program-suffix=52 \
		--sysconfdir=/etc \
		--mandir=/usr/share/man \
		--disable-debug \
		--with-regex=php \
		--disable-rpath \
		--disable-static \
		--with-pic \
		--with-layout=GNU \
		--with-pear=/usr/share/php \
		--enable-calendar \
		--enable-sysvsem \
		--enable-sysvshm \
		--enable-sysvmsg \
		--enable-bcmath \
		--with-bz2 \
		--enable-ctype \
		--with-db4 \
		--without-gdbm \
		--with-iconv \
		--enable-exif \
		--enable-ftp \
		--with-gettext \
		--enable-mbstring \
		--with-pcre-regex=/usr \
		--enable-shmop \
		--enable-sockets \
		--enable-wddx \
		--with-libxml-dir=/usr \
		--with-zlib \
		--with-openssl=/usr \
		--enable-soap \
		--enable-zip \
		--with-mime-magic=$(MAGIC_MIME) \
		--with-exec-dir=/usr/lib/php5/libexec \
		--enable-libxml \
		--with-curl \
		--with-curlwrappers \
		--enable-dba \
		--enable-dbase \
		--with-gd \
		--with-jpeg-dir=/usr \
		--with-png-dir=/usr \
		--with-xpm-dir=/usr \
		--with-ttf \
		--with-gmp \
		--with-freetype-dir=/usr \
		--enable-gd-native-ttf \
		--with-t1lib \
		--with-mcrypt \
		--with-mhash \
		--with-mysql=/usr \
		--with-mysqli \
		--with-mysql-sock=/var/run/mysqld/mysqld.sock \
		--with-pdo-mysql=/usr \
		--with-readline \
		--with-recode \
		--enable-pcntl \
		--with-xmlrpc \
		--with-xsl \
		--enable-zip \
		--with-ldap=/usr \
		--with-pspell=/usr \
		--with-tidy=/usr \
		--with-zend-vm=GOTO

# include the patch/unpatch rules from quilt
include /usr/share/quilt/quilt.make

prepared: prepared-stamp

prepared-stamp: $(QUILT_STAMPFN)
	dh_testdir
	touch prepared-stamp

unprepared:
	dh_testdir
	rm -f prepared-stamp

build: build-apache2-stamp build-cli-stamp build-pear-stamp

build-apache2-stamp: configure-apache2-stamp
	dh_testdir
	cd apache2-build && $(MAKE)
	touch build-apache2-stamp

build-cli-stamp: configure-cli-stamp
	dh_testdir
	cd cli-build && $(MAKE)
	touch build-cli-stamp

build-pear-stamp: build-cli-stamp
	dh_testdir
	-mkdir pear-build
	cd cli-build && make install-pear PHP_PEAR_PHP_BIN=/usr/bin/php PHP_PEAR_INSTALL_DIR=/usr/share/php PHP_PEAR_SYSCONF_DIR=/etc/pear PHP_PEAR_SIG_BIN=/usr/bin/gpg INSTALL_ROOT=$(CURDIR)/pear-build
	sed -i -e 's/-d output_buffering=1 -d open_basedir="" -d safe_mode=0/-d output_buffering=1 -d open_basedir="" -d safe_mode=0 -d memory_limit="-1"/' \
		$(CURDIR)/pear-build/usr/bin/pear && \
	sed -i -e 's/-d output_buffering=1 -d safe_mode=0/-d output_buffering=1 -d open_basedir="" -d safe_mode=0 -d memory_limit="-1"/' \
		$(CURDIR)/pear-build/usr/bin/pecl && \
	sed -i -e 's/-d memory_limit="-1"//' \
		-e 's/-d output_buffering=1 -d open_basedir="" -d safe_mode=0/-d output_buffering=1 -d open_basedir="" -d safe_mode=0 -d memory_limit="-1"/' \
		$(CURDIR)/pear-build/usr/bin/peardev
	touch build-pear-stamp

configure: configure-apache2-stamp configure-cli-stamp

configure-apache2-stamp: prepared-stamp
	dh_testdir
	if [ -d apache2-build ]; then rm -rf apache2-build; fi
	-mkdir apache2-build
	cd apache2-build && \
	CFLAGS="$(CFLAGS)" PROG_SENDMAIL="$(PROG_SENDMAIL)" ../configure \
		--prefix=/usr --with-apxs2=/usr/bin/apxs2 \
		--with-config-file-path=/etc/php52/apache2 \
		--with-config-file-scan-dir=/etc/php52/apache2/conf.d \
		$(COMMON_CONFIG)
	touch configure-apache2-stamp

configure-cli-stamp: prepared-stamp
	dh_testdir
	if [ -d cli-build ]; then rm -rf cli-build; fi
	-mkdir cli-build
	cd cli-build && \
	CFLAGS="$(CFLAGS)" PROG_SENDMAIL="$(PROG_SENDMAIL)" ../configure \
		--prefix=/usr --disable-cgi \
		--with-config-file-path=/etc/php52/cli \
		--with-config-file-scan-dir=/etc/php52/cli/conf.d \
		$(COMMON_CONFIG)
	touch configure-cli-stamp

install: DH_OPTIONS=
install: build
	dh_testdir
	dh_testroot
	dh_clean -k
	dh_installdirs
	cd apache2-build && $(MAKE) install-sapi install-cli install-build install-headers install-programs INSTALL_IT=/bin/true INSTALL_ROOT=$(PWD)/debian/php52
	mkdir -p debian/php52/var/lib/php52
	chmod 01733 debian/php52/var/lib/php52
	mkdir -p debian/php52/$(EXTENSION_DIR)
	mkdir -p debian/php52/var/log/php52
	chown root:www-data debian/php52/var/log/php52
	chmod 0750 debian/php52/var/log/php52
	
	# install apache2 DSO module
	mkdir -p debian/php52/`apxs2 -q LIBEXECDIR`
	cp apache2-build/.libs/libphp5.so debian/php52/`apxs2 -q LIBEXECDIR`/libphp52.so
	mkdir -p debian/php52/etc/apache2/mods-available
	cp debian/apache2-php52.load debian/php52/etc/apache2/mods-available/php52.load
	cp debian/apache2-php52.conf debian/php52/etc/apache2/mods-available/php52.conf
	mkdir -p debian/php52/etc/php52/apache2
	cp php.ini-recommended debian/php52/etc/php52/apache2/php.ini
	sed -i "s#^extension_dir = \"./\"#extension_dir = \"$(EXTENSION_DIR)\"#" debian/php52/etc/php52/apache2/php.ini
	
	# install CLI
	cp cli-build/sapi/cli/php debian/php52/usr/bin/php
	cp cli-build/sapi/cli/php.1 debian/php52/usr/share/man/man1/php5.1
	mkdir -p debian/php52/etc/php52/cli
	cp php.ini-recommended debian/php52/etc/php52/cli/php.ini
	sed -i 's#^display_errors = Off#display_errors = stderr#' debian/php52/etc/php52/cli/php.ini
	sed -i "s#^extension_dir = \"./\"#extension_dir = \"$(EXTENSION_DIR)\"#" debian/php52/etc/php52/cli/php.ini
	sed -i "s#^output_buffering = 4096#output_buffering = Off#" debian/php52/etc/php52/cli/php.ini
	
	# Install PEAR
	cp -r pear-build/* debian/php52/
	
	# Install configuration
	mkdir -p debian/php52/etc/php52/conf.d
	cp debian/php52-logging.ini debian/php52/etc/php52/conf.d/logging.ini
	cp debian/php52-limits.ini debian/php52/etc/php52/conf.d/limits.ini
	cp debian/php52-environment.ini debian/php52/etc/php52/conf.d/environment.ini
	
	touch install-stamp

binary: binary-arch binary-indep

binary-indep:

binary-arch: build install
	dh_testdir
	dh_testroot
	dh_installcron --name=php52
	dh_installchangelogs NEWS
	dh_strip -s
	dh_link -s
	dh_compress -s -X.ini
	dh_fixperms -s -X /var/lib/php52
	mkdir -p debian/php52/usr/share/linda/overrides
	echo "Tag: non-standard-dir-perm" >> debian/php52/usr/share/linda/overrides/php52
	echo "Data: /var/lib/php5.*" >> debian/php52/usr/share/linda/overrides/php52
	dh_installdeb -s
	dh_shlibdeps -s
	dh_gencontrol -s
	dh_md5sums -s
	dh_builddeb -s

clean: unprepared unpatch
	dh_testdir
	dh_testroot
	rm -f configure-apache2-stamp build-apache2-stamp
	rm -f configure-cli-stamp build-cli-stamp
	rm -f build-pear-stamp
	rm -f install-stamp
	rm -rf apache2-build
	rm -rf cli-build
	rm -rf pear-build
	dh_clean

.PHONY: build clean binary-indep binary-arch binary install configure
